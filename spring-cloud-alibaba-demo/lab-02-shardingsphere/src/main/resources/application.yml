server:
  port: 8085
spring:
  application:
    name: Sharding-Jdbc-demo
#  datasource:
#    username: root        #数据库登陆用户名
#    password: mauFJcuf5dhRMQrjj        #数据库登陆密码
#    url: jdbc:mysql://16.163.97.13:3306/quotes?autoReconnect=true&useSSL=false       #数据库url
#    driver-class-name: com.mysql.jdbc.Driver                  #数据库驱动

  shardingsphere:
    datasource:
      #配置数据源的名称
      names: m1,m2
      #配置每个数据源
      # Spring Boot2.x默认使用的mysql驱动为8.x，需将驱动设置为com.mysql.cj.jdbc.Driver
      # 如驱动为com.mysql.jdbc.Driver会有问题，在启动时会报如下信息：
      # Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/tb1?allowPublicKeyRetrieval=true&useSSL=false
        username: root
        #password: mauFJcuf5dhRMQrjj
        password: 123456
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/tb2?allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: 123456
    sharding:
      #表的分布情况
      tables:
        course: # course表
          actual-data-nodes: m$->{1..2}.course_$->{1..2} #表达式，ds0中的course_1和course_2
          key-generator:
            column: cid #主键生成的例
            type: SNOWFLAKE #使用雪花算法生成主键
            props:
              worker:
                id: 1
          #数据表分片策略：course_id为偶数时添加进course1中，奇数添加进course2中
          table-strategy:
#            inline:
#              sharding-column: cid
#              #algorithm-expression: course_$->{cid%2+1}
#              algorithm-expression: course_$->{((cid+1)%4).intdiv(2)+1}
             standard:
               shardingColumn: cid
               preciseAlgorithmClassName: com.sk.scott.algorithm.MyPreciseTableShardingAlgorithm
               rangeAlgorithmClassName: com.sk.scott.algorithm.MyRangeTableShardingAlgorithm
          database-strategy:
#            inline:
#              sharding-column: cid
#              algorithm-expression: m$->{cid%2+1}
             standard:
               shardingColumn: cid
               preciseAlgorithmClassName: com.sk.scott.algorithm.MyPreciseDBShardingAlgorithm
               rangeAlgorithmClassName: com.sk.scott.algorithm.MyRangeDBShardingAlgorithm
    props:
      sql:
        show: true
#mybatis-plus:
#  configuration:
#    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
#  global-config:
#    db-config:
#      id-type: auto # ID 主键自增
#      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
#      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
#  mapper-locations: classpath*:mapper/*.xml
#  type-aliases-package: cn.iocoder.springboot.lab12.mybatis.dataobject